F_statistics = (Rg1g2/3)/(SSRes/(8-4))
F_statistics
#e
X2 = X[,-1]
Rg2 = t(y)%*%X2%*%solve(t(X2)%*%X2)%*%t(X2)%*%y
SSTotal=t(y)%*%y - t(y)%*%y/8
SSRes = t(y-X%*%b)%*%(y-X%*%b)
SSReg = SSTotal - SSRes
Rg1g2 = SSReg - Rg2
F_statistics = (Rg1g2/3)/(SSRes/(8-4))
pf(F_statistics,3,8-4,lower.tail = FALSE)
F_statistics
X2 = X[,-1]
Rg2 = t(y)%*%X2%*%solve(t(X2)%*%X2)%*%t(X2)%*%y
SSTotal=t(y)%*%y
SSRes = t(y-X%*%b)%*%(y-X%*%b)
SSReg = SSTotal - SSRes
Rg1g2 = SSReg - Rg2
F_statistics = (Rg1g2/3)/(SSRes/(8-4))
pf(F_statistics,3,8-4,lower.tail = FALSE)
F_statistics = (Rg1g2/3)/(SSRes/(5))
X2 = X[,-1]
Rg2 = t(y)%*%X2%*%solve(t(X2)%*%X2)%*%t(X2)%*%y
SSTotal=t(y)%*%y
SSRes = t(y-X%*%b)%*%(y-X%*%b)
SSReg = SSTotal - SSRes
Rg1g2 = SSReg - Rg2
F_statistics = (Rg1g2/3)/(SSRes/(5))
pf(F_statistics,3,5,lower.tail = FALSE)
SSReg = SSTotal - SSRes
Rg1g2 = SSReg - Rg2
F_statistics = (Rg1g2/3)/(SSRes/(3))
pf(F_statistics,3,3,lower.tail = FALSE)
X2 = X[,-1]
Rg2 = t(y)%*%X2%*%solve(t(X2)%*%X2)%*%t(X2)%*%y
SSTotal=t(y)%*%y
SSRes = t(y-X%*%b)%*%(y-X%*%b)
SSReg = SSTotal - SSRes
Rg1g2 = SSReg - Rg2
F_statistics = (Rg1g2/3)/(SSRes/(3))
pf(F_statistics,3,3,lower.tail = FALSE)
X2 = X[,-1]
Rg2 = t(y)%*%X2%*%solve(t(X2)%*%X2)%*%t(X2)%*%y
SSTotal=t(y)%*%y
SSRes = t(y-X%*%b)%*%(y-X%*%b)
SSReg = SSTotal - SSRes
Rg1g2 = SSReg - Rg2
F_statistics = (Rg1g2/3)/(SSRes/(3))
pf(F_statistics,3,3,lower.tail = FALSE)
X2 = X[,-1]
Rg2 = t(y)%*%X2%*%solve(t(X2)%*%X2)%*%t(X2)%*%y
SSTotal=t(y)%*%y
SSRes = t(y-X%*%b)%*%(y-X%*%b)
SSReg = SSTotal - SSRes
Rg1g2 = SSReg - Rg2
F_statistics = (Rg1g2/3)/(SSRes/(4))
pf(F_statistics,3,4,lower.tail = FALSE)
Rg1g2/3
v
t(y)%*%y
t(y)%*%X2%*%solve(t(X2)%*%X2)%*%t(X2)%*%y
X
y
Rg1g2/3
(sum(y)^2/8)
SSTotal
(sum(y)^2)
SSTotal=sum(y^2)
SSTotal
X2 = X[,1]
Rg2 = t(y)%*%X2%*%solve(t(X2)%*%X2)%*%t(X2)%*%y
SSTotal=sum(y^2)
SSRes = t(y-X%*%b)%*%(y-X%*%b)
SSReg = SSTotal - SSRes
Rg1g2 = SSReg - Rg2
F_statistics = (Rg1g2/3)/(SSRes/(4))
pf(F_statistics,3,4,lower.tail = FALSE)
F_statistics
(F_statistics = (Rg1g2/3)/(SSRes/(4)))
pf(F_statistics,3,4,lower.tail = FALSE)
#d
p = (7.087-t%*%b)/(s* sqrt(1+t(t)%*%solve(t(X)%*%X)%*%t))
alpha = pt(p,df)
appha
alpha
p = (7.087-t%*%b)/(s* sqrt(1+t(t)%*%solve(t(X)%*%X)%*%t))
t=pt(p,df)
alpha = (1-t)*2
alpha
t
#d
p = (7.087-t%*%b)/(s* sqrt(1+t(t)%*%solve(t(X)%*%X)%*%t))
t=pt(p,df)
alpha = (1-t)*2
p = (7.087-t%*%b)/(s* sqrt(1+t(t)%*%solve(t(X)%*%X)%*%t))
t=pt(p,df)
alpha = (1-t)*2
s = sqrt(s2)
t = c(1,8,9,5)
ci = t%*%b + qt(0.995,4) * c(-1,1) * s * sqrt(t(t)%*%solve(t(X)%*%X)%*%t)
#d
p = (7.087-t%*%b)/(s* sqrt(1+t(t)%*%solve(t(X)%*%X)%*%t))
alpha = (1-pt(p,df))*2
p
alpha
SSreg
SSReg
SSRes
Rg2
F_statistics
anova(null,model)
aic_fullmodel = lm(Murder ~ ., data= statedata2)
aic_model1 = step(aic_fullmodel, scope = ~ -.)
aic_model1 = step(aic_fullmodel, scope = ~ -.)
which.max(AIC(x))
n = 8
X=matrix(c(rep(1,8),7.2,10,9,5.5,9,9.8,14.5,8,8.7,9.4,10,9,12,11,12,13.7,5.5,4.4,4,7,5,6.2,5.8,3.9),8,4)
y = c(5.5,5.9,6.5,5.9,8.0,9.0,10.0,10.8)
y= y-7.7
AIC<-function(x){
aic <- seq(0,1,0.01)
for (i in 1:101){
SSres= sum((y-A%*%(solve(t(A)%*%A + diag(3)*x[i])%*%t(A)%*%y))^2)
aic[i] = n*log(SSres/n)+2*sum(diag(A%*%solve(t(A)%*%A+diag(3)*x[i])%*%t(A)))
}
return(aic)
}
x <- seq(0,1,0.01)
curve(AIC(x))
which.max(AIC(x))
which.max(AIC(x))
which.min(AIC(x))
x[which.min(AIC(x))]
#Question4
#4a)
data = read.csv("mile.csv",encoding = "UTF-8")
plot(data$Year,data$Time, data$Gender.category, ylab = "Time",
xlab = "Year",col=c("blue", "red")[1+(data$Gender=="M
#Question4
#4a)
data = read.csv("mile.csv",encoding = "UTF-8")
plot(data$Year,data$Time, data$Gender.category, ylab = "Time",
xlab = "Year",col=c("blue", "red")[1+(data$Gender=="M
X= marrix(c(1,1,1,1,1,1,0,0,0,0,1,1,1.1,1.2,1.3,1.4,1.1,1.2,0,0,0,0,1.3,1.4),4,4)
X= marrix(c(1,1,1,1,1,1,0,0,0,0,1,1,1.1,1.2,1.3,1.4,1.1,1.2,0,0,0,0,1.3,1.4),4,4))
)
))
X= marrix(c(1,1,1,1,1,1,0,0,0,0,1,1,1.1,1.2,1.3,1.4,1.1,1.2,0,0,0,0,1.3,1.4),4,4))
X= marrix(c(1,1,1,1,1,1,0,0,0,0,1,1,1.1,1.2,1.3,1.4,1.1,1.2,0,0,0,0,1.3,1.4),4,4)
X= matrix(c(1,1,1,1,1,1,0,0,0,0,1,1,1.1,1.2,1.3,1.4,1.1,1.2,0,0,0,0,1.3,1.4),4,4)
X
X= matrix(c(1,1,1,1,1,1,0,0,0,0,1,1,1.1,1.2,1.3,1.4,1.1,1.2,0,0,0,0,1.3,1.4),4,5)
X= matrix(c(1,1,1,1,1,1,0,0,0,0,1,1,1.1,1.2,1.3,1.4,1.1,1.2,0,0,0,0,1.3,1.4),4,6)
X
rank(X)
rankMatrix(X)
library(Matrix)
library(Matrix)
rankMatrix(X)
X
X= matrix(c(1,1,1,1,1,1,0,0,0,0,1,1,1.1,1.2,1.3,1.4,1.1,1.2,0,0,0,0,1.3,1.4),4,6)
rankMatrix(X)
X= matrix(c(1,1,1,1,11,,1,1,0,0,0,0,1,0.9,1,1.1,1.2,1.3,1.4,0.9,1.1,1.2,0,0,0,0,0,1.3,1.4),5,6)
rankMatrix(X)
X= matrix(c(1,1,1,1,1,1,1,1,0,0,0,0,1,0.9,1,1.1,1.2,1.3,1.4,0.9,1.1,1.2,0,0,0,0,0,1.3,1.4),5,6)
X= matrix(c(1,1,1,1,1,1,1,1,0,0,0,0,1,0.9,1,1.1,1.2,1.3,1.4,0.9,1.1,1.2,0,0,0,0,0,1.3,1.4),5,6)
rankMatrix(X)
X
X= matrix(c(1,1,1,1,1,1,1,1,0,0,0,0,1,1,0.9,1.1,1.2,1.3,1.4,0.9,1.1,1.2,0,0,0,0,0,1.3,1.4),5,6)
rankMatrix(X)
X
X= matrix(c(1,1,1,1,1,1,1,1,0,0,0,,0,0,1,1,0.9,1.1,1.2,1.3,1.4,0.9,1.1,1.2,0,0,0,0,0,1.3,1.4),5,6)
rankMatrix(X)
X= matrix(c(1,1,1,1,1,1,1,1,0,0,0,0,0,0,1,1,0.9,1.1,1.2,1.3,1.4,0.9,1.1,1.2,0,0,0,0,0,1.3,1.4),5,6)
rankMatrix(X)
X
X= matrix(c(1,1,1,1,1,1,1,1,0,0,0,0,0,1,1,0.9,1.1,1.2,1.3,1.4,0.9,1.1,1.2,0,0,0,0,0,1.3,1.4),5,6)
rankMatrix(X)
X
X= matrix(c(1,1,1,1,1,1,1,1,0,0,0,0,0,1,1,0.9,1.1,1.2,1.3,1.4,0.9,1.1,1.2,0,0,0,0,0,1.3,1.4),5,3)
rankMatrix(X)
#Q1a
library(faraway)
data(orings)
logL<- function(beta, orings){
eta = cbind(rep(1,length(orings$temp)),orings$temp)%*%beta
return(sum(orings$damage*log(pnorm(eta))+(6-orings$damage)*log(1-pnorm(eta))))
}
(betahat = optim(c(10,-.1), logL,orings = orings, control = list(fnscale=-1))$par)
#Q1a
library(faraway)
data(orings)
logL<- function(beta, orings){
eta = cbind(rep(1,length(orings$temp)),orings$temp)%*%beta
return(sum(orings$damage*log(pnorm(eta))+(6-orings$damage)*log(1-pnorm(eta))))
}
#maximize
(betahat = optim(c(10,-.1), logL,orings = orings, control = list(fnscale=-1))$par)
##Q1b
beta0 = betahat[1]
beta1 = betahat[2]
eta = beta0+orings$temp*beta1
#cdf of standard normal
D0 = pnorm(eta)
#first derivative(pdf of standard normal)
D1 = dnorm(eta)
#second derivative
D2=1/sqrt(2*pi)*exp(-(eta^2)/2)*(-1*eta)
x = orings$temp
y = orings$damage
m = 6
(Lb1b1=sum( (y*x^2*(D0*D2-D1*D1))/(D0^2)+(y-m)*(x^2*((1-D0)*D2+D1*D1))/((1-D0)*(1-D0))))
(Lb1b0=sum( y*x*(D0*D2-D1*D1)/(D0^2)+(y-m)*x*((1-D0)*D2+D1*D1)/((1-D0)*(1-D0))))
(Lb0b0=sum( y*(D0*D2-D1*D1)/(D0^2)+(y-m)*((1-D0)*D2+D1*D1)/((1-D0)*(1-D0))))
(J = -matrix(c(Lb0b0,Lb1b0,Lb1b0,Lb1b1),2,2))
(variance = solve(J))
(Beta0CI = c(betahat[1] - qnorm(0.975)*sqrt(variance[1,1]),betahat[1] + qnorm(0.975)*sqrt(variance[1,1])))
(Beta1CI = c(betahat[2] - qnorm(0.975)*sqrt(variance[2,2]),betahat[2] + qnorm(0.975)*sqrt(variance[2,2])))
##Q1b
beta0 = betahat[1]
beta1 = betahat[2]
(eta = beta0+orings$temp*beta1)
#cdf of standard normal
D0 = pnorm(eta)
#first derivative(pdf of standard normal)
D1 = dnorm(eta)
#second derivative
D2=1/sqrt(2*pi)*exp(-(eta^2)/2)*(-1*eta)
x = orings$temp
y = orings$damage
m = 6
(Lb1b1=sum( (y*x^2*(D0*D2-D1*D1))/(D0^2)+(y-m)*(x^2*((1-D0)*D2+D1*D1))/((1-D0)*(1-D0))))
(Lb1b0=sum( y*x*(D0*D2-D1*D1)/(D0^2)+(y-m)*x*((1-D0)*D2+D1*D1)/((1-D0)*(1-D0))))
(Lb0b0=sum( y*(D0*D2-D1*D1)/(D0^2)+(y-m)*((1-D0)*D2+D1*D1)/((1-D0)*(1-D0))))
(J = -matrix(c(Lb0b0,Lb1b0,Lb1b0,Lb1b1),2,2))
(variance = solve(J))
(Beta0CI = c(betahat[1] - qnorm(0.975)*sqrt(variance[1,1]),betahat[1] + qnorm(0.975)*sqrt(variance[1,1])))
(Beta1CI = c(betahat[2] - qnorm(0.975)*sqrt(variance[2,2]),betahat[2] + qnorm(0.975)*sqrt(variance[2,2])))
##Q1c Likelihood Ratio Test
n=rep(6,length(y))
phatN = sum(y)/sum(n)
(MaxlogL.R = sum(y*log(phatN))+sum(6-y)*log(1-phatN))
(MaxlogL.F = logL(betahat, orings))
(LR = -2*(MaxlogL.R-MaxlogL.F))
#X2 statistics = 20.76708,
pchisq(df=1,20.76708,lower.tail = FALSE)
#reject null model
##Q1c Likelihood Ratio Test
n=rep(6,length(y))
#phat for the null model
(phatN = sum(y)/sum(n))
#Max log likelihood for Reduced model
(MaxlogL.R = sum(y*log(phatN))+sum(6-y)*log(1-phatN))
#Max log likelihood for Full model
(MaxlogL.F = logL(betahat, orings))
#Likelihood Ratio Statistics
(LR = -2*(MaxlogL.R-MaxlogL.F))
##Q1c Likelihood Ratio Test
#phatN for the null model
n=rep(6,length(y))
(phatN = sum(y)/sum(n))
#Max log likelihood for Reduced model
(MaxlogL.R = sum(y*log(phatN))+sum(6-y)*log(1-phatN))
#Max log likelihood for Full model
(MaxlogL.F = logL(betahat, orings))
#Likelihood Ratio Statistics
(LR = -2*(MaxlogL.R-MaxlogL.F))
#LR follow chi-square distribution with 1 degree of freedom
pValue = pchisq(df=1,LR,lower.tail = FALSE)
#Since p-value is less than 0.05,reject null hypothesis (H0)
#Thus beta-1 is not equal to 0
#LR follow chi-square distribution with 1 degree of freedom
(pValue = pchisq(df=1,LR,lower.tail = FALSE))
#Since p-value is less than 0.05,reject null hypothesis (H0)
#Thus beta-1 is not equal to 0
t=c(1,31)
etaCI = c(t%*%betahat-qnorm(0.975)*sqrt(t(t)%*%variance%*%t),t%*%betahat+qnorm(0.975)*sqrt(t(t)%*%variance%*%t))
pnorm(etaCI)
t=c(1,31)
etaCI = c(t%*%betahat-qnorm(0.975)*sqrt(t(t)%*%variance%*%t),
t%*%betahat+qnorm(0.975)*sqrt(t(t)%*%variance%*%t))
pnorm(etaCI)
#Q1d
t=c(1,31)
#estimate
eta = t(t)%*%betahat
(pnorm(eta))
#CI for estimate
etaCI = c(t%*%betahat-qnorm(0.975)*sqrt(t(t)%*%variance%*%t),
t%*%betahat+qnorm(0.975)*sqrt(t(t)%*%variance%*%t))
(pnorm(etaCI))
#0.7169598 0.9999744
#Q1d
t=c(1,31)
#estimate
eta = t(t)%*%betahat
(pnorm(eta))
#the estimate of damage when temperature equals 31 Fahrenheit is 0.9896084
#95%CI for estimate
etaCI = c(t%*%betahat-qnorm(0.975)*sqrt(t(t)%*%variance%*%t),
t%*%betahat+qnorm(0.975)*sqrt(t(t)%*%variance%*%t))
(pnorm(etaCI))
#The 95% Confidence interval for estimate of damage when temperature
#equals to 31 Fahrenheit is (0.7169598, 0.9999744)
#Q1d
t=c(1,31)
#estimate
eta = t(t)%*%betahat
(pnorm(eta))
#the estimate of damage when temperature equals 31 Fahrenheit is 0.9896084
#95%CI for estimate
etaCI = c(t%*%betahat-qnorm(0.975)*sqrt(t(t)%*%variance%*%t),
t%*%betahat+qnorm(0.975)*sqrt(t(t)%*%variance%*%t))
(pnorm(etaCI))
#The 95% Confidence interval for estimate probability of damage when temperature
#equals to 31 Fahrenheit is (0.7169598, 0.9999744)
#Plot the data
plot(damage/6 ~ temp, orings, xlim=c(25,85), ylim=c(0,1),xlab="Temperature", ylab="Prob of damage")
x <- seq(25,85,1)
#use the glm with logit link to fit the model
logitmod <- glm(cbind(damage,6-damage) ~ temp, family=binomial, orings)
(betahatLogit=logitmod$coefficients)
lines(x, ilogit(betahatLogit[1] + betahatLogit[2]*x), col="red",)
#use probit link to fit the model
lines(x, pnorm(betahat[1] + betahat[2]*x), col="green")
#add legend
legend(60,1,legend = c("logit","inverse standard normal"), col = c("red","green"),lty=1)
#Plot the data
plot(damage/6 ~ temp, orings, xlim=c(25,85), ylim=c(0,1),xlab="Temperature", ylab="Prob of damage")
x <- seq(25,85,1)
#use the glm with logit link to fit the model
logitmod <- glm(cbind(damage,6-damage) ~ temp, family=binomial, orings)
(betahatLogit=logitmod$coefficients)
lines(x, ilogit(betahatLogit[1] + betahatLogit[2]*x), col="red",)
#use probit link to fit the model
lines(x, pnorm(betahat[1] + betahat[2]*x), col="green")
#add legend
legend(60,1,legend = c("logit","inverse standard normal"), col = c("red","green"),lty=1)
#Q1e
#Plot the data
plot(damage/6 ~ temp, orings, xlim=c(25,85), ylim=c(0,1),xlab="Temperature", ylab="Prob of damage")
x <- seq(25,85,1)
#use the glm with logit link to fit the model
logitmod <- glm(cbind(damage,6-damage) ~ temp, family=binomial, orings)
(betahatLogit=logitmod$coefficients)
lines(x, ilogit(betahatLogit[1] + betahatLogit[2]*x), col="red",)
#use probit link to fit the model
lines(x, pnorm(betahat[1] + betahat[2]*x), col="green")
#add legend
legend(60,1,legend = c("logit model","probit model"), col = c("red","green"),lty=1)
load("assign1.Robj")
model = glm(pima_subset$test~pima_subset$bmi,family = binomial(logit))
summary(model)
load("assign1.Robj")
load("assign1.Robj")
load("assign1.Robj")
load("assign1.Robj")
library(faraway)
data(orings)
str(orings)
plot(damage/6 ~ temp, orings, xlim=c(25,85), ylim=c(0,1),
xlab="Temperature", ylab="Prob of damage")
try <- function(a, b, col = "red") {
t <- seq(25, 85, 1)
p <- 1/(1 + exp(-a - b*t))
lines(t, p, col = col)
}
plot(damage/6 ~ temp, orings, xlim=c(25,85), ylim=c(0,1),
xlab="Temperature", ylab="Prob of damage")
try(11, -0.2, col="red")
## Compared to red curve: same location, stronger steepness
try(22, -0.4, col="blue")
## Compared to red curve: shifted location, same steepness
try(9, -0.2, col="darkgreen")
logL <- function(beta, orings) {
eta <- cbind(1, orings$temp) %*% beta
return( sum( orings$damage*eta - 6*log(1 + exp(eta)) ) )
}
(betahat <- optim(c(10, -.1), logL, orings=orings, control=list(fnscale=-1))$par)
plot(damage/6 ~ temp, orings, xlim=c(25,85), ylim=c(0,1),
xlab="Temperature", ylab="Prob of damage")
x <- seq(25,85,1)
ilogit <- function(x) exp(x)/(1+exp(x))
lines(x, ilogit(betahat[1] + betahat[2]*x), col="red")
ilogit (betahat[1] + betahat[2]*29)
logitmod <- glm(cbind(damage,6-damage) ~ temp, family=binomial, orings)
summary(logitmod)
predict(logitmod, newdata=data.frame(temp=29), type="response")
phat <- ilogit(betahat[1] + orings$temp*betahat[2])
I11 <- sum(6*phat*(1 - phat))
I12 <- sum(6*orings$temp*phat*(1 - phat))
I22 <- sum(6*orings$temp^2*phat*(1 - phat))
Iinv <- solve(matrix(c(I11, I12, I12, I22), 2, 2))
sqrt(Iinv[1,1])
sqrt(Iinv[2,2])
si2 <- matrix(c(1, 29), 1, 2) %*% Iinv %*% matrix(c(1, 29), 2, 1)
etahat = betahat[1] + betahat[2]*29
eta_l = etahat - 2*sqrt(si2)
eta_r = etahat + 2*sqrt(si2)
etahat
c(eta_l, eta_r)
ilogit (etahat)
c(ilogit (eta_l), ilogit (eta_r))
library(faraway)
data(orings)
logL <- function(beta, orings) {
eta <- cbind(1, orings$temp) %*% beta
return( sum( orings$damage*eta - 6*log(1 + exp(eta)) ) )
}
(betahat <- optim(c(10, -.1), logL, orings=orings, control=list(fnscale=-1))$par)
ilogit <- function(x) exp(x)/(1+exp(x))
phat <- ilogit(betahat[1] + orings$temp*betahat[2])
I11 <- sum(6*phat*(1 - phat))
I12 <- sum(6*orings$temp*phat*(1 - phat))
I22 <- sum(6*orings$temp^2*phat*(1 - phat))
Iinv <- solve(matrix(c(I11, I12, I12, I22), 2, 2))
sqrt(Iinv[1,1])
sqrt(Iinv[2,2])
betahat[2]/sqrt(Iinv[2,2])
2*pnorm(abs(betahat[2]/sqrt(Iinv[2,2])), 0, 1, lower=FALSE)
(MaxlogL.F = logL(betahat,orings))
y <- orings$damage
n <- rep(6, length(y))
phatN <- sum(y)/sum(n)
(MaxlogL.R = sum(orings$damage)*log(phatN) + sum(6-orings$damage)*log(1-phatN))
(LR = -2*(MaxlogL.R - MaxlogL.F))
pchisq(LR, df=1,lower=FALSE)
(betahat[2]/sqrt(Iinv[2,2]))^2
(LR = -2*(MaxlogL.R - MaxlogL.F))
y <- orings$damage
n <- rep(6, length(y))
ylogxy <- function(x, y) ifelse(y == 0, 0, y*log(x/y))
(D <- -2*sum(ylogxy(n*phat, y) + ylogxy(n*(1-phat), n - y)))
(df <- length(y) - length(betahat))
pchisq(D, df,lower=FALSE)
logitmod <- glm(cbind(damage,6-damage) ~ temp, family=binomial, orings)
deviance(logitmod)
df.residual(logitmod)
(phatN <- sum(y)/sum(n))
(DN <- -2*sum(ylogxy(n*phatN, y) + ylogxy(n*(1-phatN), n - y)))
(dfN <- length(y) - 1)
pchisq(DN, dfN,lower=FALSE)
logitnull <- glm(cbind(y, n - y) ~ 1, family=binomial)
summary(logitnull)
ilogit(-2.4463)
DN-D
pchisq(DN - D, dfN - df, lower=FALSE)
data()
data1
dataset = read.delim("assign2.txt", header = TRUE, sep = " ")
data1 = dataset[dataset$actor == 1,]
data2 = dataset[dataset$actor == 2,]
data3 = dataset[dataset$actor == 3,]
data4 = dataset[dataset$actor == 4,]
data5 = dataset[dataset$actor == 5,]
data6 = dataset[dataset$actor == 6,]
data7 = dataset[dataset$actor == 7,]
data1
dataset = read.delim("assign2.txt", header = TRUE, sep = " ")
data1 = dataset[dataset$actor == 1,]
data2 = dataset[dataset$actor == 2,]
data3 = dataset[dataset$actor == 3,]
data4 = dataset[dataset$actor == 4,]
data5 = dataset[dataset$actor == 5,]
data6 = dataset[dataset$actor == 6,]
data7 = dataset[dataset$actor == 7,]
dataset = read.delim("assign2.txt", header = TRUE, sep = " ")
getwd()
setwd("C:\Users\MOTIANYI\Desktop\Modern Applied Statistics\R-ModernAppliedStatistics\Ass2")
setwd("C:/Users/MOTIANYI/Desktop/Modern Applied Statistics/R-ModernAppliedStatistics/Ass2")
dataset = read.delim("assign2.txt", header = TRUE, sep = " ")
data1 = dataset[dataset$actor == 1,]
data2 = dataset[dataset$actor == 2,]
data3 = dataset[dataset$actor == 3,]
data4 = dataset[dataset$actor == 4,]
data5 = dataset[dataset$actor == 5,]
data6 = dataset[dataset$actor == 6,]
data7 = dataset[dataset$actor == 7,]
setwd("C:/Users/MOTIANYI/Desktop/Modern Applied Statistics/R-ModernAppliedStatistics/Ass2")
data1
data1[data1$condition==2,]
data1[data1$condition==1,]
data1[data1$condition==0,]
data1[data1$condition==1,]
data1
data1[data1$condition==0,]
data1[data1$condition!=0,]
data1[data1$condition==0,]
length(data1[data1$condition==0,])
data1[data1$condition==0,]
dim([data1$condition==0,])
dim.data.frame([data1$condition==0,])
dim.data.frame(data1[data1$condition==0,])
colSums (data1, na.rm = FALSE, dims = 1)
colSums (data2, na.rm = FALSE, dims = 1)
colSums (data3, na.rm = FALSE, dims = 1)
colSums (data4, na.rm = FALSE, dims = 1)
colSums (data5, na.rm = FALSE, dims = 1)
colSums (data6, na.rm = FALSE, dims = 1)
colSums (data7, na.rm = FALSE, dims = 1)
colSums (data1[data1$condition==0,], na.rm = FALSE, dims = 1)
colSums (data1[data1$condition==1,], na.rm = FALSE, dims = 1)
colSums (data2[data2$condition==1,], na.rm = FALSE, dims = 1)
colSums (data2[data2$condition==0,], na.rm = FALSE, dims = 1)
colSums (data3[data3$condition==0,], na.rm = FALSE, dims = 1)
colSums (data3[data3$condition==1,], na.rm = FALSE, dims = 1)
colSums (data4[data4$condition==1,], na.rm = FALSE, dims = 1)
colSums (data5[data5$condition==1,], na.rm = FALSE, dims = 1)
colSums (data6[data6$condition==1,], na.rm = FALSE, dims = 1)
colSums (data6[data6$condition==7,], na.rm = FALSE, dims = 1)
colSums (data7[data7$condition==1,], na.rm = FALSE, dims = 1)
colSums (data7[data7$condition==0,], na.rm = FALSE, dims = 1)
